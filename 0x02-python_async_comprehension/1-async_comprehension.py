#!/usr/bin/env python3

"""
Import async_generator from previous task and write a coroutine called
async_comprehension that takes no arguments.

The coroutine will collect 10 random numbers using an async comprehensing over
async_generator, then return the 10 random numbers.
"""

from typing import List, Callable

async_generator: Callable = __import__('0-async_generator').async_generator


async def async_comprehension() -> List[float]:
    """
    Collects 10 random numbers using an asynchronous generator.

    This function uses an asynchronous list comprehension to collect
    10 random floating-point numbers generated by the async_generator.

    Returns:
        List[float]: A list of 10 random floating-point numbers.
    """
    return [i async for i in async_generator()]
